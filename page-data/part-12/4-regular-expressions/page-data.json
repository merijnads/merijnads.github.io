{
    "componentChunkName": "component---src-templates-course-content-template-js",
    "path": "/part-12/4-regular-expressions",
    "result": {"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will know what regular expressions are"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will be able to use regular expressions in your own programs"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We have already established that Python is an excellent environment for processing text. One additional powerful tool for text processing is "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"regular expressions"}]},{"type":"text","value":", often shortened as "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"regex"}]},{"type":"text","value":" or "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"regexp"}]},{"type":"text","value":". They are a way of selecting and searching for strings which follow a certain pattern. This section introduces you to the basics of regular expression, but you will find much more information online, including in the Python "},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/howto/regex.html","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"tutorial"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"h2","properties":{"id":"what-are-regular-expressions","style":"position:relative;"},"children":[{"type":"text","value":"What are regular expressions?"},{"type":"element","tagName":"a","properties":{"href":"#what-are-regular-expressions","ariaLabel":"what are regular expressions permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Regular expressions are not just a Python feature. They represent, in a way, a programming language within a programming language. They are, to an extent, compatible across many different programming languages. Regular expressions have their own specific syntax. The idea is to define a collection of strings which follow certain rules."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's begin with a simple example, before diving deeper into the syntax:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" re\n\nwords "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Python\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Pantone\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Pontoon\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Pollute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Pantheon\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" word "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" words"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# the string should begin with \"P\" and end with \"on\""}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" re"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"search"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"^P.*on$\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" word"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"word"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"found!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python found!\nPontoon found!\nPantheon found!"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We need to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"re"}]},{"type":"text","value":" module in order to use regular expressions in Python. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"re"}]},{"type":"text","value":" module contains many functions for working with regular expressions. In the example above, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"search"}]},{"type":"text","value":" function takes two string arguments: the pattern string, and the target string where the pattern is looked for."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This second example looks for any numbers in a string. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"findall"}]},{"type":"text","value":" function returns a list of all the instances which match the pattern:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" re\n\nsentence "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"First, 2 !#third 44 five 678xyz962\""}]},{"type":"text","value":"\n\nnumbers "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" re"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"findall"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\\d+\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" sentence"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" number "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" numbers"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"number"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2\n44\n678\n962"}]}]},{"type":"element","tagName":"h2","properties":{"id":"the-syntax-of-regular-expressions","style":"position:relative;"},"children":[{"type":"text","value":"The syntax of regular expressions"},{"type":"element","tagName":"a","properties":{"href":"#the-syntax-of-regular-expressions","ariaLabel":"the syntax of regular expressions permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's get familiar with the basic syntax of regular expressions. Most of the following examples make use of this testing program:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" re\n\nexpression "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in an expression: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    input_string "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in a string: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" input_string "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" re"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"search"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"expression"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" input_string"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Found!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Not found.\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"h3","properties":{"id":"alternate-substrings","style":"position:relative;"},"children":[{"type":"text","value":"Alternate substrings"},{"type":"element","tagName":"a","properties":{"href":"#alternate-substrings","ariaLabel":"alternate substrings permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The vertical bar "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":", also called the pipe character, allows you to match alternate substrings. Its significance is thus "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"or"}]},{"type":"text","value":". For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"911|112"}]},{"type":"text","value":" matches strings which include either the substring "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"911"}]},{"type":"text","value":" or the substring "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"112"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example with the testing program:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"aa|ee|ii"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"aardvark"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"feelings"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"radii"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"smooch"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"continuum"}]},{"type":"text","value":"\nNot found."}]}]},{"type":"element","tagName":"h3","properties":{"id":"groups-of-characters","style":"position:relative;"},"children":[{"type":"text","value":"Groups of characters"},{"type":"element","tagName":"a","properties":{"href":"#groups-of-characters","ariaLabel":"groups of characters permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Square brackets are used to signify groups of accepted characters. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[aeio]"}]},{"type":"text","value":" would match all strings which contain any of the characters a, e, i, or o."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A dash is also allowed for matching ranges of characters. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[0-68a-d]"}]},{"type":"text","value":" would match all strings which contain a digit between 0 and 6, or an eight, or a character between a and d. In this notation all ranges are "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inclusive"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Combining two sets of brackets lets you match two consecutive characters. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[1-3][0-9]"}]},{"type":"text","value":" would match any two digit number between 10 and 39, inclusive."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example with the testing program:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"[C-FRSO]"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"C"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"E"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"G"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"R"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"O"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T"}]},{"type":"text","value":"\nNot found."}]}]},{"type":"element","tagName":"h3","properties":{"id":"repeated-matches","style":"position:relative;"},"children":[{"type":"text","value":"Repeated matches"},{"type":"element","tagName":"a","properties":{"href":"#repeated-matches","ariaLabel":"repeated matches permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Any part of an expression can be repeated with the following operators:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" repeats for any number of times, including zero"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" repeats for any number of times, but at least once"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{m}"}]},{"type":"text","value":" repeats for exactly "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"m"}]},{"type":"text","value":" times"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These operators work on the part of the expression immediately preceding the operator. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ba+b"}]},{"type":"text","value":" would match the substrings "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"bab"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"baab"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"baaaaaaaaaaab"}]},{"type":"text","value":", among others. The expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"A[BCDE]*Z"}]},{"type":"text","value":" would match the substrings "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"AZ"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ADZ"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ABCDEBCDEBCDEZ"}]},{"type":"text","value":", among others."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example with the testing program:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1[234]*5"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"15"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"125"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"145"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"12342345"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"126"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"165"}]},{"type":"text","value":"\nNot found."}]}]},{"type":"element","tagName":"h3","properties":{"id":"other-special-characters","style":"position:relative;"},"children":[{"type":"text","value":"Other special characters"},{"type":"element","tagName":"a","properties":{"href":"#other-special-characters","ariaLabel":"other special characters permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A dot is a wildcard character which can match any single character. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"c...o"}]},{"type":"text","value":" would match any five character substring beginning with a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"c"}]},{"type":"text","value":" and ending with an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"o"}]},{"type":"text","value":", such as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"c-3po"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cello"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"^"}]},{"type":"text","value":" character specifies that the match must be at the beginning of the string, and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$"}]},{"type":"text","value":" specifies that the match must be at the end of the string. These can also be used to exclude from the matches any other characters than those specified:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"^[123]*$"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1221"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"333333333"}]},{"type":"text","value":"\nFound!"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes you need to match for the special characters reserved for regular expression syntax. The backslash "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\\"}]},{"type":"text","value":" can be used to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"escape"}]},{"type":"text","value":" special characters. So, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"1+"}]},{"type":"text","value":" matches one or more numbers "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":", but the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"1\\+"}]},{"type":"text","value":" matches the string "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"1+"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"^\\*"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"moi*"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"m*o*i"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"*moi"}]},{"type":"text","value":"\nFound!"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Round brackets can be used to group together different parts of the expression. For example, the expression "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"(ab)+c"}]},{"type":"text","value":" would match the substrings "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"abc"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ababc"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ababababababc"}]},{"type":"text","value":", but not the strings "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ac"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"bc"}]},{"type":"text","value":", as the entire substring "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ab"}]},{"type":"text","value":" would have to appear at least once."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in an expression: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"^(jabba).*(hut)$"}]},{"type":"text","value":"\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"jabba the hut"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"jabba a hut"}]},{"type":"text","value":"\nFound!\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"jarjar the hut"}]},{"type":"text","value":"\nNot found.\nPlease type in a string: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"jabba the smut"}]},{"type":"text","value":"\nNot found."}]}]},{"type":"element","tagName":"programming-exercise","properties":{"name":"Regular expressions","tmcname":"part12-14_regular_expressions"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are some exercises for familiarizing yourself with regular expression syntax."}]},{"type":"element","tagName":"h2","properties":{"id":"days-of-the-week","style":"position:relative;"},"children":[{"type":"text","value":"Days of the week"},{"type":"element","tagName":"a","properties":{"href":"#days-of-the-week","ariaLabel":"days of the week permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using a regular expression, please write a function named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"is_dotw(my_string: str)"}]},{"type":"text","value":". The function should return "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":" if the string passed as an argument contains an abbreviation for a day of the week (Mon, Tue, Wed, Thu, Fri, Sat, Sun)."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some examples of how the function should work:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"is_dotw"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Mon\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"is_dotw"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Fri\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"is_dotw"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Tui\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True\nTrue\nFalse"}]}]},{"type":"element","tagName":"h2","properties":{"id":"check-for-vowels","style":"position:relative;"},"children":[{"type":"text","value":"Check for vowels"},{"type":"element","tagName":"a","properties":{"href":"#check-for-vowels","ariaLabel":"check for vowels permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a function named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"all_vowels(my_string: str)"}]},{"type":"text","value":" which uses a regular expression to check whether all characters in the given string are vowels."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some examples of how the function should work:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"all_vowels"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"eioueioieoieou\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"all_vowels"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"autoooo\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True\nFalse"}]}]},{"type":"element","tagName":"h2","properties":{"id":"time-of-day","style":"position:relative;"},"children":[{"type":"text","value":"Time of day"},{"type":"element","tagName":"a","properties":{"href":"#time-of-day","ariaLabel":"time of day permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a function named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"time_of_day(my_string: str)"}]},{"type":"text","value":" which uses a regular expression to check whether a string in the format "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"XX:YY:ZZ"}]},{"type":"text","value":" is a valid time in the 24-hour format, with two digits each for hours, minutes and seconds."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some examples of how the function should work:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"time_of_day"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"12:43:01\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"time_of_day"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"AB:01:CD\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"time_of_day"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"17:59:59\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"time_of_day"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"33:66:77\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True\nFalse\nTrue\nFalse"}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"grand-finale","style":"position:relative;"},"children":[{"type":"text","value":"Grand finale"},{"type":"element","tagName":"a","properties":{"href":"#grand-finale","ariaLabel":"grand finale permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To finish off this part of the material, let's work some more on objects and classes by building a slightly more extensive program. This exercise does not necessarily involve regular expressions, but the sections on "},{"type":"element","tagName":"a","properties":{"href":"/part-12/1-functions-as-arguments"},"children":[{"type":"text","value":"functions as arguments"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"/part-11/1-list-comprehensions"},"children":[{"type":"text","value":"list comprehensions"}]},{"type":"text","value":" will likely be useful."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You may also find the example set in "},{"type":"element","tagName":"a","properties":{"href":"/part-10/4-application-development"},"children":[{"type":"text","value":"part 10"}]},{"type":"text","value":" helpful."}]},{"type":"element","tagName":"programming-exercise","properties":{"name":"Hockey statistics","tmcname":"part12-15_hockey_statistics"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this exercise you will build an application for examining hockey league statistics from the NHL in a couple of different ways."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The exercise template contains two JSON files: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"partial.json"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"all.json"}]},{"type":"text","value":". The first of these is mostly meant for testing. The latter contains a lot of data, as all the NHL player stats for the 2019-20 season are included in the file."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The entry for a single player is in the following format:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"json"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-json"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"name\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Patrik Laine\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"nationality\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"FIN\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"assists\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"35"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"goals\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"28"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"penalties\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"22"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"team\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"WPG\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"\"games\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"68"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both files contain a list of entries in the above format."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need a refresher on handling JSON files, please take a look at "},{"type":"element","tagName":"a","properties":{"href":"/part-7/4-data-processing#reading-json-files"},"children":[{"type":"text","value":"part 7 of this course material"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"h2","properties":{"id":"search-and-list","style":"position:relative;"},"children":[{"type":"text","value":"Search and list"},{"type":"element","tagName":"a","properties":{"href":"#search-and-list","ariaLabel":"search and list permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write an interactive application which first asks for the name of the file, and then offers the following functions:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"search by name for a single player's stats"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list all the abbreviations for team names in alphabetical order"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list all the abbreviations for countries in alphabetical order"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These functionalities grant you one exercise point. Your application should now work as follows:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"file name: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"partial.json"}]},{"type":"text","value":"\nread the data of 14 players"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\nname: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Travis Zajac"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Travis Zajac         NJD   9 + 16 =  25\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\nBUF\nCGY\nDAL\nNJD\nNYI\nOTT\nPIT\nWPG\nWSH"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":"\nCAN\nCHE\nCZE\nSWE\nUSA"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NB: the printout format for a player must be exactly as follows:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Leon Draisaitl       EDM  43 + 67 = 110\nConnor McDavid       EDM  34 + 63 =  97\nTravis Zajac         NJD   9 + 16 =  25\nMike Green           EDM   3 +  8 =  11\nMarkus Granlund      EDM   3 +  1 =   4\n123456789012345678901234567890123456789\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last line in the sample above is there to help you calculate the widths of the different fields in the output; you should not print the numbers line yourself in your final submission."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The abbreviation for the team is printed from the 22nd character onwards. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" sign is the 30th character and the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" sign is the 35th character. All the fields should be justified to the right edge. All whitespace is space characters."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"F-strings are probably the easiest way to achieve the required printout. The process is similar to "},{"type":"element","tagName":"a","properties":{"href":"/part-6/1-reading-files#programming-exercise-course-grading-part-3"},"children":[{"type":"text","value":"this exercise"}]},{"type":"text","value":" from part 6."}]},{"type":"element","tagName":"h2","properties":{"id":"list-players-by-points","style":"position:relative;"},"children":[{"type":"text","value":"List players by points"},{"type":"element","tagName":"a","properties":{"href":"#list-players-by-points","ariaLabel":"list players by points permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These two functionalities will grant you a second exercise point:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list players in a specific team in the order of points scored, from highest to lowest. Points equals "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"goals"}]},{"type":"text","value":" + "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"assists"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list players from a specific country in the order of points scored, from highest to lowest"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your application should now work as follows:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"file name: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"partial.json"}]},{"type":"text","value":"\nread the data of 14 players"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"\nteam: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"OTT"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Drake Batherson      OTT   3 +  7 =  10\nJonathan Davidsson   OTT   0 +  1 =   1\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":"\ncountry: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"CAN"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Jared McCann         PIT  14 + 21 =  35\nTravis Zajac         NJD   9 + 16 =  25\nTaylor Fedun         DAL   2 +  7 =   9\nMark Jankowski       CGY   5 +  2 =   7\nLogan Shaw           WPG   3 +  2 =   5\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0"}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"most-successful-players","style":"position:relative;"},"children":[{"type":"text","value":"Most successful players"},{"type":"element","tagName":"a","properties":{"href":"#most-successful-players","ariaLabel":"most successful players permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These two functionalities will grant you a third exercise point:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"n"}]},{"type":"text","value":" players who've scored the most points\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if two players have the same score, whoever has scored the higher number of goals comes first"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"list of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"n"}]},{"type":"text","value":" players who've scored the most goals\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if two players have the same number of goals, whoever has played the lower number of games comes first"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your application should now work as follows:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"file name: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"partial.json"}]},{"type":"text","value":"\nread the data of 14 players"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"\nhow many: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Jakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"\nhow many: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Jakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\nJohn Klingberg       DAL   6 + 26 =  32\nTravis Zajac         NJD   9 + 16 =  25\nConor Sheary         BUF  10 + 13 =  23\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"7"}]},{"type":"text","value":"\nhow many: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"6"}]}]},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"text","value":"Jakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\nConor Sheary         BUF  10 + 13 =  23\nTravis Zajac         NJD   9 + 16 =  25\nJohn Klingberg       DAL   6 + 26 =  32\nMark Jankowski       CGY   5 +  2 =   7\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"command: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please respond to a quick questionnaire on this part of the course."}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"quiz","properties":{"id":"8bb54f0a-5009-5a69-a936-3c9eebc33645"},"children":[]}]}]},"html":"<div><text-box variant='learningObjectives' name=\"Learning objectives\"><p>After this section</p><ul>\n<li>You will know what regular expressions are</li>\n<li>You will be able to use regular expressions in your own programs</li>\n</ul></text-box><p>We have already established that Python is an excellent environment for processing text. One additional powerful tool for text processing is <em>regular expressions</em>, often shortened as <em>regex</em> or <em>regexp</em>. They are a way of selecting and searching for strings which follow a certain pattern. This section introduces you to the basics of regular expression, but you will find much more information online, including in the Python <a href=\"https://docs.python.org/3/howto/regex.html\" target=\"_blank\" rel=\"noopener noreferrer\">tutorial</a>.</p><h2 id=\"what-are-regular-expressions\" style=\"position:relative;\">What are regular expressions?<a href=\"#what-are-regular-expressions\" aria-label=\"what are regular expressions permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Regular expressions are not just a Python feature. They represent, in a way, a programming language within a programming language. They are, to an extent, compatible across many different programming languages. Regular expressions have their own specific syntax. The idea is to define a collection of strings which follow certain rules.</p><p>Let's begin with a simple example, before diving deeper into the syntax:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\nwords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pantone\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pontoon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pollute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pantheon\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> words<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># the string should begin with \"P\" and end with \"on\"</span>\n    <span class=\"token keyword\">if</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"^P.*on$\"</span><span class=\"token punctuation\">,</span> word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> <span class=\"token string\">\"found!\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Python found!\nPontoon found!\nPantheon found!</p></sample-output><p>We need to <code class=\"language-text\">import</code> the <code class=\"language-text\">re</code> module in order to use regular expressions in Python. The <code class=\"language-text\">re</code> module contains many functions for working with regular expressions. In the example above, the <code class=\"language-text\">search</code> function takes two string arguments: the pattern string, and the target string where the pattern is looked for.</p><p>This second example looks for any numbers in a string. The <code class=\"language-text\">findall</code> function returns a list of all the instances which match the pattern:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\nsentence <span class=\"token operator\">=</span> <span class=\"token string\">\"First, 2 !#third 44 five 678xyz962\"</span>\n\nnumbers <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\d+\"</span><span class=\"token punctuation\">,</span> sentence<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>2\n44\n678\n962</p></sample-output><h2 id=\"the-syntax-of-regular-expressions\" style=\"position:relative;\">The syntax of regular expressions<a href=\"#the-syntax-of-regular-expressions\" aria-label=\"the syntax of regular expressions permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Let's get familiar with the basic syntax of regular expressions. Most of the following examples make use of this testing program:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\nexpression <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in an expression: \"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    input_string <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in a string: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> input_string <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">if</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">,</span> input_string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not found.\"</span><span class=\"token punctuation\">)</span></code></pre></div><h3 id=\"alternate-substrings\" style=\"position:relative;\">Alternate substrings<a href=\"#alternate-substrings\" aria-label=\"alternate substrings permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>The vertical bar <code class=\"language-text\">|</code>, also called the pipe character, allows you to match alternate substrings. Its significance is thus <em>or</em>. For example, the expression <code class=\"language-text\">911|112</code> matches strings which include either the substring <code class=\"language-text\">911</code> or the substring <code class=\"language-text\">112</code>.</p><p>An example with the testing program:</p><sample-output><p>Please type in an expression: <strong>aa|ee|ii</strong>\nPlease type in a string: <strong>aardvark</strong>\nFound!\nPlease type in a string: <strong>feelings</strong>\nFound!\nPlease type in a string: <strong>radii</strong>\nFound!\nPlease type in a string: <strong>smooch</strong>\nNot found.\nPlease type in a string: <strong>continuum</strong>\nNot found.</p></sample-output><h3 id=\"groups-of-characters\" style=\"position:relative;\">Groups of characters<a href=\"#groups-of-characters\" aria-label=\"groups of characters permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Square brackets are used to signify groups of accepted characters. For example, the expression <code class=\"language-text\">[aeio]</code> would match all strings which contain any of the characters a, e, i, or o.</p><p>A dash is also allowed for matching ranges of characters. For example, the expression <code class=\"language-text\">[0-68a-d]</code> would match all strings which contain a digit between 0 and 6, or an eight, or a character between a and d. In this notation all ranges are <em>inclusive</em>.</p><p>Combining two sets of brackets lets you match two consecutive characters. For example, the expression <code class=\"language-text\">[1-3][0-9]</code> would match any two digit number between 10 and 39, inclusive.</p><p>An example with the testing program:</p><sample-output><p>Please type in an expression: <strong>[C-FRSO]</strong>\nPlease type in a string: <strong>C</strong>\nFound!\nPlease type in a string: <strong>E</strong>\nFound!\nPlease type in a string: <strong>G</strong>\nNot found.\nPlease type in a string: <strong>R</strong>\nFound!\nPlease type in a string: <strong>O</strong>\nFound!\nPlease type in a string: <strong>T</strong>\nNot found.</p></sample-output><h3 id=\"repeated-matches\" style=\"position:relative;\">Repeated matches<a href=\"#repeated-matches\" aria-label=\"repeated matches permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Any part of an expression can be repeated with the following operators:</p><ul>\n<li><code class=\"language-text\">*</code> repeats for any number of times, including zero</li>\n<li><code class=\"language-text\">+</code> repeats for any number of times, but at least once</li>\n<li><code class=\"language-text\">{m}</code> repeats for exactly <code class=\"language-text\">m</code> times</li>\n</ul><p>These operators work on the part of the expression immediately preceding the operator. For example, the expression <code class=\"language-text\">ba+b</code> would match the substrings <code class=\"language-text\">bab</code>, <code class=\"language-text\">baab</code> and <code class=\"language-text\">baaaaaaaaaaab</code>, among others. The expression <code class=\"language-text\">A[BCDE]*Z</code> would match the substrings <code class=\"language-text\">AZ</code>, <code class=\"language-text\">ADZ</code> or <code class=\"language-text\">ABCDEBCDEBCDEZ</code>, among others.</p><p>An example with the testing program:</p><sample-output><p>Please type in an expression: <strong>1[234]*5</strong>\nPlease type in a string: <strong>15</strong>\nFound!\nPlease type in a string: <strong>125</strong>\nFound!\nPlease type in a string: <strong>145</strong>\nFound!\nPlease type in a string: <strong>12342345</strong>\nFound!\nPlease type in a string: <strong>126</strong>\nNot found.\nPlease type in a string: <strong>165</strong>\nNot found.</p></sample-output><h3 id=\"other-special-characters\" style=\"position:relative;\">Other special characters<a href=\"#other-special-characters\" aria-label=\"other special characters permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>A dot is a wildcard character which can match any single character. For example, the expression <code class=\"language-text\">c...o</code> would match any five character substring beginning with a <code class=\"language-text\">c</code> and ending with an <code class=\"language-text\">o</code>, such as <code class=\"language-text\">c-3po</code> or <code class=\"language-text\">cello</code>.</p><p>The <code class=\"language-text\">^</code> character specifies that the match must be at the beginning of the string, and <code class=\"language-text\">$</code> specifies that the match must be at the end of the string. These can also be used to exclude from the matches any other characters than those specified:</p><sample-output><p>Please type in an expression: <strong>^[123]*$</strong>\nPlease type in a string: <strong>4</strong>\nNot found.\nPlease type in a string: <strong>1221</strong>\nFound!\nPlease type in a string: <strong>333333333</strong>\nFound!</p></sample-output><p>Sometimes you need to match for the special characters reserved for regular expression syntax. The backslash <code class=\"language-text\">\\</code> can be used to <em>escape</em> special characters. So, the expression <code class=\"language-text\">1+</code> matches one or more numbers <code class=\"language-text\">1</code>, but the expression <code class=\"language-text\">1\\+</code> matches the string <code class=\"language-text\">1+</code>.</p><sample-output><p>Please type in an expression: <strong>^\\*</strong>\nPlease type in a string: <strong>moi*</strong>\nNot found.\nPlease type in a string: <strong>m*o*i</strong>\nNot found.\nPlease type in a string: <strong>*moi</strong>\nFound!</p></sample-output><p>Round brackets can be used to group together different parts of the expression. For example, the expression <code class=\"language-text\">(ab)+c</code> would match the substrings <code class=\"language-text\">abc</code>, <code class=\"language-text\">ababc</code> and <code class=\"language-text\">ababababababc</code>, but not the strings <code class=\"language-text\">ac</code> or <code class=\"language-text\">bc</code>, as the entire substring <code class=\"language-text\">ab</code> would have to appear at least once.</p><sample-output><p>Please type in an expression: <strong>^(jabba).*(hut)$</strong>\nPlease type in a string: <strong>jabba the hut</strong>\nFound!\nPlease type in a string: <strong>jabba a hut</strong>\nFound!\nPlease type in a string: <strong>jarjar the hut</strong>\nNot found.\nPlease type in a string: <strong>jabba the smut</strong>\nNot found.</p></sample-output><programming-exercise name='Regular expressions' tmcname='part12-14_regular_expressions'><p>Here are some exercises for familiarizing yourself with regular expression syntax.</p><h2 id=\"days-of-the-week\" style=\"position:relative;\">Days of the week<a href=\"#days-of-the-week\" aria-label=\"days of the week permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Using a regular expression, please write a function named <code class=\"language-text\">is_dotw(my_string: str)</code>. The function should return <code class=\"language-text\">True</code> if the string passed as an argument contains an abbreviation for a day of the week (Mon, Tue, Wed, Thu, Fri, Sat, Sun).</p><p>Some examples of how the function should work:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_dotw<span class=\"token punctuation\">(</span><span class=\"token string\">\"Mon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_dotw<span class=\"token punctuation\">(</span><span class=\"token string\">\"Fri\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_dotw<span class=\"token punctuation\">(</span><span class=\"token string\">\"Tui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>True\nTrue\nFalse</p></sample-output><h2 id=\"check-for-vowels\" style=\"position:relative;\">Check for vowels<a href=\"#check-for-vowels\" aria-label=\"check for vowels permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Please write a function named <code class=\"language-text\">all_vowels(my_string: str)</code> which uses a regular expression to check whether all characters in the given string are vowels.</p><p>Some examples of how the function should work:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>all_vowels<span class=\"token punctuation\">(</span><span class=\"token string\">\"eioueioieoieou\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>all_vowels<span class=\"token punctuation\">(</span><span class=\"token string\">\"autoooo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>True\nFalse</p></sample-output><h2 id=\"time-of-day\" style=\"position:relative;\">Time of day<a href=\"#time-of-day\" aria-label=\"time of day permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Please write a function named <code class=\"language-text\">time_of_day(my_string: str)</code> which uses a regular expression to check whether a string in the format <code class=\"language-text\">XX:YY:ZZ</code> is a valid time in the 24-hour format, with two digits each for hours, minutes and seconds.</p><p>Some examples of how the function should work:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time_of_day<span class=\"token punctuation\">(</span><span class=\"token string\">\"12:43:01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time_of_day<span class=\"token punctuation\">(</span><span class=\"token string\">\"AB:01:CD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time_of_day<span class=\"token punctuation\">(</span><span class=\"token string\">\"17:59:59\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time_of_day<span class=\"token punctuation\">(</span><span class=\"token string\">\"33:66:77\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>True\nFalse\nTrue\nFalse</p></sample-output></programming-exercise><h2 id=\"grand-finale\" style=\"position:relative;\">Grand finale<a href=\"#grand-finale\" aria-label=\"grand finale permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>To finish off this part of the material, let's work some more on objects and classes by building a slightly more extensive program. This exercise does not necessarily involve regular expressions, but the sections on <a href=\"/part-12/1-functions-as-arguments\">functions as arguments</a> and <a href=\"/part-11/1-list-comprehensions\">list comprehensions</a> will likely be useful.</p><p>You may also find the example set in <a href=\"/part-10/4-application-development\">part 10</a> helpful.</p><programming-exercise name='Hockey statistics' tmcname='part12-15_hockey_statistics'><p>In this exercise you will build an application for examining hockey league statistics from the NHL in a couple of different ways.</p><p>The exercise template contains two JSON files: <code class=\"language-text\">partial.json</code> and <code class=\"language-text\">all.json</code>. The first of these is mostly meant for testing. The latter contains a lot of data, as all the NHL player stats for the 2019-20 season are included in the file.</p><p>The entry for a single player is in the following format:</p><div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Patrik Laine\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"nationality\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FIN\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"assists\"</span><span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"goals\"</span><span class=\"token operator\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"penalties\"</span><span class=\"token operator\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"team\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WPG\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"games\"</span><span class=\"token operator\">:</span> <span class=\"token number\">68</span>\n<span class=\"token punctuation\">}</span></code></pre></div><p>Both files contain a list of entries in the above format.</p><p>If you need a refresher on handling JSON files, please take a look at <a href=\"/part-7/4-data-processing#reading-json-files\">part 7 of this course material</a>.</p><h2 id=\"search-and-list\" style=\"position:relative;\">Search and list<a href=\"#search-and-list\" aria-label=\"search and list permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Please write an interactive application which first asks for the name of the file, and then offers the following functions:</p><ul>\n<li>search by name for a single player's stats</li>\n<li>list all the abbreviations for team names in alphabetical order</li>\n<li>list all the abbreviations for countries in alphabetical order</li>\n</ul><p>These functionalities grant you one exercise point. Your application should now work as follows:</p><sample-output><p>file name: <strong>partial.json</strong>\nread the data of 14 players</p><p>commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals</p><p>command: <strong>1</strong>\nname: <strong>Travis Zajac</strong></p><pre>\nTravis Zajac         NJD   9 + 16 =  25\n</pre><p>command: <strong>2</strong>\nBUF\nCGY\nDAL\nNJD\nNYI\nOTT\nPIT\nWPG\nWSH</p><p>command: <strong>3</strong>\nCAN\nCHE\nCZE\nSWE\nUSA</p><p>command: <strong>0</strong></p></sample-output><p>NB: the printout format for a player must be exactly as follows:</p><sample-output><pre>\nLeon Draisaitl       EDM  43 + 67 = 110\nConnor McDavid       EDM  34 + 63 =  97\nTravis Zajac         NJD   9 + 16 =  25\nMike Green           EDM   3 +  8 =  11\nMarkus Granlund      EDM   3 +  1 =   4\n123456789012345678901234567890123456789\n</pre></sample-output><p>The last line in the sample above is there to help you calculate the widths of the different fields in the output; you should not print the numbers line yourself in your final submission.</p><p>The abbreviation for the team is printed from the 22nd character onwards. The <code class=\"language-text\">+</code> sign is the 30th character and the <code class=\"language-text\">=</code> sign is the 35th character. All the fields should be justified to the right edge. All whitespace is space characters.</p><p>F-strings are probably the easiest way to achieve the required printout. The process is similar to <a href=\"/part-6/1-reading-files#programming-exercise-course-grading-part-3\">this exercise</a> from part 6.</p><h2 id=\"list-players-by-points\" style=\"position:relative;\">List players by points<a href=\"#list-players-by-points\" aria-label=\"list players by points permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>These two functionalities will grant you a second exercise point:</p><ul>\n<li>list players in a specific team in the order of points scored, from highest to lowest. Points equals <em>goals</em> + <em>assists</em></li>\n<li>list players from a specific country in the order of points scored, from highest to lowest</li>\n</ul><p>Your application should now work as follows:</p><sample-output><p>file name: <strong>partial.json</strong>\nread the data of 14 players</p><p>commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals</p><p>command: <strong>4</strong>\nteam: <strong>OTT</strong></p><pre>\nDrake Batherson      OTT   3 +  7 =  10\nJonathan Davidsson   OTT   0 +  1 =   1\n</pre><p>command: <strong>5</strong>\ncountry: <strong>CAN</strong></p><pre>\nJared McCann         PIT  14 + 21 =  35\nTravis Zajac         NJD   9 + 16 =  25\nTaylor Fedun         DAL   2 +  7 =   9\nMark Jankowski       CGY   5 +  2 =   7\nLogan Shaw           WPG   3 +  2 =   5\n</pre><p>command: <strong>0</strong></p></sample-output><h2 id=\"most-successful-players\" style=\"position:relative;\">Most successful players<a href=\"#most-successful-players\" aria-label=\"most successful players permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>These two functionalities will grant you a third exercise point:</p><ul>\n<li>list of <code class=\"language-text\">n</code> players who've scored the most points\n<ul>\n<li>if two players have the same score, whoever has scored the higher number of goals comes first</li>\n</ul>\n</li>\n<li>list of <code class=\"language-text\">n</code> players who've scored the most goals\n<ul>\n<li>if two players have the same number of goals, whoever has played the lower number of games comes first</li>\n</ul>\n</li>\n</ul><p>Your application should now work as follows:</p><sample-output><p>file name: <strong>partial.json</strong>\nread the data of 14 players</p><p>commands:\n0 quit\n1 search for player\n2 teams\n3 countries\n4 players in team\n5 players from country\n6 most points\n7 most goals</p><p>command: <strong>6</strong>\nhow many: <strong>2</strong></p><pre>\nJakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\n</pre><p>command: <strong>6</strong>\nhow many: <strong>5</strong></p><pre>\nJakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\nJohn Klingberg       DAL   6 + 26 =  32\nTravis Zajac         NJD   9 + 16 =  25\nConor Sheary         BUF  10 + 13 =  23\n</pre><p>command: <strong>7</strong>\nhow many: <strong>6</strong></p><pre>\nJakub Vrana          WSH  25 + 27 =  52\nJared McCann         PIT  14 + 21 =  35\nConor Sheary         BUF  10 + 13 =  23\nTravis Zajac         NJD   9 + 16 =  25\nJohn Klingberg       DAL   6 + 26 =  32\nMark Jankowski       CGY   5 +  2 =   7\n</pre><p>command: <strong>0</strong></p></sample-output></programming-exercise><p>Please respond to a quick questionnaire on this part of the course.</p><div><quiz id=\"8bb54f0a-5009-5a69-a936-3c9eebc33645\"></quiz></div></div>","frontmatter":{"path":"/part-12/4-regular-expressions","title":"Regular expressions"},"fileAbsolutePath":"/home/runner/work/programming-23/programming-23/data/part-12/4-regular-expressions.md"},"allPages":{"edges":[{"node":{"id":"c3ae90dc-eeda-5102-8d0a-8bd922f06557","frontmatter":{"path":"/all-exercises","title":"All exercises"}}},{"node":{"id":"f51cf144-2172-5afc-a47f-f6d96b233dbb","frontmatter":{"path":"/error_messages","title":"Common error messages"}}},{"node":{"id":"61ee0f92-c8cc-5014-9f52-fa01f7febe29","frontmatter":{"path":"/exam","title":"Exam 4.6."}}},{"node":{"id":"df3b192c-87b3-5588-943a-36e3b9efd42e","frontmatter":{"path":"/exam-adv","title":"Advanced Course in Programming exam 10.06."}}},{"node":{"id":"dcaec9a0-9579-5103-a819-eba042c36590","frontmatter":{"path":"/exam-intro","title":"Introduction to Programming extra exam 01.07."}}},{"node":{"id":"ba3435a6-8031-5b0a-92cb-8042cb5f5ca9","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"eca12ffb-514e-511b-b00f-9e80e2d438f1","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"80b2bae2-f99c-5e49-86f1-5a08e46402d9","frontmatter":{"path":"/grading-and-exams","title":"Grading and exams"}}},{"node":{"id":"125076a3-8535-5188-bb33-7fbd73f9ccd7","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"5462269f-5934-5658-b944-bcff904c6f3a","frontmatter":{"path":"/support-and-assistance","title":"Support and assistance"}}},{"node":{"id":"3092cd78-7901-57ba-9064-2b9f43c44b76","frontmatter":{"path":"/glossary","title":"Glossary"}}},{"node":{"id":"1e9cf9b1-8ffa-5def-9c70-a221a2273b1e","frontmatter":{"path":"/part-1/1-getting-started","title":"Getting started"}}},{"node":{"id":"57a2d765-36ec-548b-bf08-ccd05ec8fe2f","frontmatter":{"path":"/part-1/2-information-from-the-user","title":"Information from the user"}}},{"node":{"id":"29176b43-954e-5278-a676-d773d2b4efb9","frontmatter":{"path":"/part-1/3-more-about-variables","title":"More about variables"}}},{"node":{"id":"545f7678-7366-520b-939d-4a461860a043","frontmatter":{"path":"/part-1/4-arithmetic-operations","title":"Arithmetic operations"}}},{"node":{"id":"ece0affb-a0a2-5832-91d6-88843be85136","frontmatter":{"path":"/part-1/5-conditional-statements","title":"Conditional statements"}}},{"node":{"id":"be1892f6-d9d4-578d-87f8-69cc5ab71ee8","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"84689cc0-5624-55a0-8234-fe4d174bf2ff","frontmatter":{"path":"/part-10/1-class-hierarchies","title":"Class hierarchies"}}},{"node":{"id":"d9005c43-a17d-5ea5-99cf-b706be86e567","frontmatter":{"path":"/part-10/2-access-modifiers","title":"Access modifiers"}}},{"node":{"id":"b869a9fa-2a18-5657-a992-2db9e8ef1a7c","frontmatter":{"path":"/part-10/3-oo-programming-techniques","title":"Object oriented programming techniques"}}},{"node":{"id":"131ca0b9-d3cc-5b3c-9705-0a6b66271a7c","frontmatter":{"path":"/part-10/4-application-development","title":"Developing a larger application"}}},{"node":{"id":"fc06238d-ec9b-5a2c-93cb-a9be454edd5a","frontmatter":{"path":"/part-10","title":"Part 10"}}},{"node":{"id":"bed7c218-bb77-5d2b-af59-14a58ac1bad3","frontmatter":{"path":"/part-11/1-list-comprehensions","title":"List comprehensions"}}},{"node":{"id":"4252a8a9-4d6d-56f9-9a2d-4c5e9341c696","frontmatter":{"path":"/part-11/2-more-comprehensions","title":"More comprehensions"}}},{"node":{"id":"d1ec791f-ccd0-505e-a28e-e2697a6119db","frontmatter":{"path":"/part-11/3-recursion","title":"Recursion"}}},{"node":{"id":"cfa37bc2-8cc6-5116-a5a2-e2360a0bc8af","frontmatter":{"path":"/part-11/4-more-recursion-examples","title":"More recursion examples"}}},{"node":{"id":"ce7acd54-8f5c-53dd-9f08-94b20c7c1702","frontmatter":{"path":"/part-11","title":"Part 11"}}},{"node":{"id":"875a4efd-4d44-50ae-a6f8-4b67c063d7b6","frontmatter":{"path":"/part-12/1-functions-as-arguments","title":"Functions as arguments"}}},{"node":{"id":"d90dc6f5-ffa0-5ce6-b2f9-0b1d9368ac32","frontmatter":{"path":"/part-12/2-generators","title":"Generators"}}},{"node":{"id":"c7d3ba4b-9e46-51cd-8e4e-ad345bc3d95d","frontmatter":{"path":"/part-12/3-functional-programming","title":"Functional programming"}}},{"node":{"id":"ea18954b-1c5a-5c94-b2da-cc46f59f808a","frontmatter":{"path":"/part-12/4-regular-expressions","title":"Regular expressions"}}},{"node":{"id":"00c1ae0b-56ab-5ae3-b7bf-96f700e577ee","frontmatter":{"path":"/part-12","title":"Part 12"}}},{"node":{"id":"c1fe6026-9012-5cdb-81cd-6ac2b49d0ce3","frontmatter":{"path":"/part-13/1-pygame","title":"Pygame"}}},{"node":{"id":"ac70e590-febb-519a-8720-007f61489815","frontmatter":{"path":"/part-13/2-animation","title":"Animation"}}},{"node":{"id":"7a07902e-016f-5155-b42c-e9f28eb03748","frontmatter":{"path":"/part-13/3-events","title":"Events"}}},{"node":{"id":"a7e589f2-410d-596b-8753-f751ce6f2eb1","frontmatter":{"path":"/part-13/4-more-pygame-techniques","title":"More pygame techniques"}}},{"node":{"id":"37b1b64d-1e34-554b-a7a2-dee66c435886","frontmatter":{"path":"/part-13","title":"Part 13"}}},{"node":{"id":"5a2527c5-28ec-5af9-8593-e32da0aab34b","frontmatter":{"path":"/part-14/1-game-project","title":"Game project"}}},{"node":{"id":"b573b3e4-c8b9-54cb-813c-b3f97422483d","frontmatter":{"path":"/part-14/2-robot-and-boxes","title":"Robot and boxes"}}},{"node":{"id":"2c222d02-372f-5ecc-9661-177e1b5ac32a","frontmatter":{"path":"/part-14/3-finishing-the-game","title":"Finishing the game"}}},{"node":{"id":"56f6a640-d9e9-5288-bc7d-5e440b116265","frontmatter":{"path":"/part-14/4-your-own-game","title":"Your own game"}}},{"node":{"id":"cfdf4162-ec88-5455-bf87-9192e9e68e05","frontmatter":{"path":"/part-14","title":"Part 14"}}},{"node":{"id":"c549a89d-2024-592c-b8a8-30caf380c89d","frontmatter":{"path":"/part-2/1-programming-terminology","title":"Programming terminology"}}},{"node":{"id":"51ff47da-066a-5196-b8d5-24643220a24a","frontmatter":{"path":"/part-2/2-else-elif","title":"More conditionals"}}},{"node":{"id":"bf96bc2b-5d39-5064-b529-4f8845da1ee9","frontmatter":{"path":"/part-2/3-combining-conditions","title":"Combining conditions"}}},{"node":{"id":"30aa6292-57da-5754-a57f-b2bbff5af1f0","frontmatter":{"path":"/part-2/4-simple-loops","title":"Simple loops"}}},{"node":{"id":"7846679d-b0c5-5c6c-bdbd-3acbd2efdda7","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"dd4ae86b-afe2-5cb7-a91f-bbe6e9d47bd2","frontmatter":{"path":"/part-3/1-loops-with-conditions","title":"Loops with conditions"}}},{"node":{"id":"e637ac8e-a114-54ac-be6f-d3e836bcefac","frontmatter":{"path":"/part-3/2-working-with-strings","title":"Working with strings"}}},{"node":{"id":"6d240837-dddc-5c1e-920c-a88bf2513bde","frontmatter":{"path":"/part-3/3-more-loops","title":"More loops"}}},{"node":{"id":"436aec63-ed76-56e1-bea9-f48249b5c3ee","frontmatter":{"path":"/part-3/4-defining-functions","title":"Defining functions"}}},{"node":{"id":"5260de0d-cc3c-557c-ae2b-64087aecb455","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"9c3e1f1f-9abd-5273-9a42-93de3757a748","frontmatter":{"path":"/part-4/1-vscode","title":"The Visual Studio Code editor, Python interpreter and built-in debugging tool"}}},{"node":{"id":"51f3e62d-3c8a-575b-94c3-397f52111152","frontmatter":{"path":"/part-4/2-more-functions","title":"More functions"}}},{"node":{"id":"84d3ddd1-9add-58a8-bf2a-451ecfe4e0ef","frontmatter":{"path":"/part-4/3-lists","title":"Lists"}}},{"node":{"id":"fd625bca-45a1-51c3-8fc1-c8104bd8a718","frontmatter":{"path":"/part-4/4-definite-iteration","title":"Definite iteration"}}},{"node":{"id":"1af72773-cc7f-5136-8ec5-539ae4897770","frontmatter":{"path":"/part-4/5-print-statement-formatting","title":"Print statement formatting"}}},{"node":{"id":"568094e4-e5f4-56fc-8a6b-03d611a6b9c0","frontmatter":{"path":"/part-4/6-strings-and-lists","title":"More strings and lists"}}},{"node":{"id":"4f4f4f7d-5f20-544d-822c-3666a7f63798","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"3b16db1a-e72d-589a-a9e8-198edaa8f5ec","frontmatter":{"path":"/part-5/1-more-lists","title":"More lists"}}},{"node":{"id":"12223fc3-3085-5563-9df7-da105d19e1fb","frontmatter":{"path":"/part-5/2-references","title":"References"}}},{"node":{"id":"68741f01-33ed-57e6-8b4f-d0baf204b772","frontmatter":{"path":"/part-5/3-dictionary","title":"Dictionary"}}},{"node":{"id":"a8e0ea42-de31-5dbe-91ec-e1357f8e387f","frontmatter":{"path":"/part-5/4-tuple","title":"Tuple"}}},{"node":{"id":"b4e71916-da2b-59b2-a5c2-aa4f3faf9b88","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"592955bb-7093-5b89-a790-f88ca2979708","frontmatter":{"path":"/part-6/1-reading-files","title":"Reading files"}}},{"node":{"id":"305a9f12-2384-527d-826e-09b15bcd9870","frontmatter":{"path":"/part-6/2-writing-files","title":"Writing files"}}},{"node":{"id":"68bca7e7-cca3-5b12-8db8-7bcc692c92be","frontmatter":{"path":"/part-6/3-errors","title":"Handling errors"}}},{"node":{"id":"2b610381-bb9e-5ebb-babd-8e2d2470a0bf","frontmatter":{"path":"/part-6/4-scope-of-variables","title":"Local and global variables"}}},{"node":{"id":"0d3a599c-0d60-5421-b255-d5048a3a3c1c","frontmatter":{"path":"/part-6","title":"Part 6"}}},{"node":{"id":"7e2b02e0-5c12-5375-8e0e-752c13e4c26f","frontmatter":{"path":"/part-7/1-modules","title":"Modules"}}},{"node":{"id":"fee3be9a-c427-5f50-ab6a-2852e7cd7635","frontmatter":{"path":"/part-7/2-randomness","title":"Randomness"}}},{"node":{"id":"165a00ed-a420-518d-b07b-c8ae2e184923","frontmatter":{"path":"/part-7/3-times-and-dates","title":"Times and dates"}}},{"node":{"id":"3ba5a537-c20b-5f08-b1d9-b04a3cba6ad2","frontmatter":{"path":"/part-7/4-data-processing","title":"Data processing"}}},{"node":{"id":"7e2749fc-300f-5009-9367-617217c64545","frontmatter":{"path":"/part-7/5-creating-modules","title":"Creating your own modules"}}},{"node":{"id":"78e21603-5161-5086-913b-46aca921ef68","frontmatter":{"path":"/part-7/6-more-features","title":"More Python features"}}},{"node":{"id":"e70cb4ab-9224-59ff-8979-0221d5ad33d4","frontmatter":{"path":"/part-7","title":"Part 7"}}},{"node":{"id":"fbad25b6-37c8-59fe-b00c-9eedeedc2602","frontmatter":{"path":"/part-8/1-objects-and-methods","title":"Objects and methods"}}},{"node":{"id":"dbee5a14-32ff-5ca9-a297-a61ab4fb30ad","frontmatter":{"path":"/part-8/2-classes-and-objects","title":"Classes and objects"}}},{"node":{"id":"39405376-9925-51a9-893c-b4d18e98c574","frontmatter":{"path":"/part-8/3-defining-classes","title":"Defining classes"}}},{"node":{"id":"93aca6e1-17e6-5f99-9951-34a49c33ad7d","frontmatter":{"path":"/part-8/4-defining-methods","title":"Defining methods"}}},{"node":{"id":"babea4cf-f2eb-55ab-88ad-e526e741f260","frontmatter":{"path":"/part-8/5-more-examples-of-classes","title":"More examples of classes"}}},{"node":{"id":"37a14fd9-3d83-5455-bb2e-d8aaa4b9974e","frontmatter":{"path":"/part-8","title":"Part 8"}}},{"node":{"id":"d687995f-333f-58ae-bfbf-3c948eb7da5a","frontmatter":{"path":"/part-9/2-objects-as-attributes","title":"Objects as attributes"}}},{"node":{"id":"fa79e3a6-8ad8-564a-8249-44a17bd4a282","frontmatter":{"path":"/part-9/3-encapsulation","title":"Encapsulation"}}},{"node":{"id":"527bb8ea-f066-5604-a5e9-888d56825928","frontmatter":{"path":"/part-9/4-scope-of-methods","title":"Scope of methods"}}},{"node":{"id":"ec99589f-d2c4-5a54-96cd-fa09f2f25eb4","frontmatter":{"path":"/part-9/5-class-attributes","title":"Class attributes"}}},{"node":{"id":"549b53e9-fd9f-5157-a4f7-b26f786e9d55","frontmatter":{"path":"/part-9/6-more-examples-with-classes","title":"More examples with classes"}}},{"node":{"id":"e3c6b0b1-a57f-5940-b9d2-ac9b5ccd07d1","frontmatter":{"path":"/part-9","title":"Part 9"}}},{"node":{"id":"cc0c36f6-7b30-53d6-9fcc-36d313a4556c","frontmatter":{"path":"/part-9/1-objects-and-references","title":"Objects and references"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["1357757885","994120085"]}