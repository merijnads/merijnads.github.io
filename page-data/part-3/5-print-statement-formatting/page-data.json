{
    "componentChunkName": "component---src-templates-course-content-template-js",
    "path": "/part-3/5-print-statement-formatting",
    "result": {"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will know how to use arguments to format the result of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" command"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will be able to use f-strings to format printouts"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So far we have learnt three methods for formulating the argument given to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" command."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first is the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" operator for strings. It allows simple concatenation of string segments:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Mark\""}]},{"type":"text","value":"\nage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"37"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi \""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" your age is \""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" years\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This method will not work if any of the segments are not strings. In the example above, the variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"age"}]},{"type":"text","value":" has been converted into a string with the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":" function, since it is an integer and cannot be concatenated as is."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second method is considering each segment of the argument as a separate argument, and splitting them up with commas:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"your age is\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"years\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This code produces the exact same result as the previous version. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" command normally adds a space character between each argument.The advantage here is that the segments can be of different types, so there is no need to convert anything into a string."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to remove the automatically added spaces, you can add a special named argument "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sep"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"your age is\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"years\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" sep"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This prints out"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"HiMarkyour age is37years"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The argument "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sep=\"\""}]},{"type":"text","value":" is a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"keyword argument"}]},{"type":"text","value":", and its name is short for "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"separator"}]},{"type":"text","value":". It specifies that the other arguments should now be separated by an empty string. You can set the separator to any string you like. For example, if you wanted each argument on a separate line, you could set the separator to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"\\n\""}]},{"type":"text","value":", which is the newline character:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"your age is\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"years\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" sep"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\\n\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hi\nMark\nyour age is\n37\nyears"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default, the print command always ends in a newline character, but you can change this as well. The keyword argument "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":" specifies what is put at the end of a line. Setting "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":" to an empty string means that there is no newline character at the end of the printout:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Hi \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" end"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"there!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hi there!"}]}]},{"type":"element","tagName":"h2","properties":{"id":"f-strings","style":"position:relative;"},"children":[{"type":"text","value":"f-strings"},{"type":"element","tagName":"a","properties":{"href":"#f-strings","ariaLabel":"f strings permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The third method to prepare strings is f-strings. The previous example with the name and the age would look like this formulated with f-strings:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Erkki\""}]},{"type":"text","value":"\nage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"39"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Hi "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" your age is "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" years\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Thus far we have only used very simple f-strings, but they can be very versatile in formatting string type content. One very common use case is setting the number of decimals that are printed out with a floating point number. By default the number is quite high:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"/"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"The number is "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"number"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The number is 0.333333333333333"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The specific format we want the number to be displayed in can be set within the curly brackets of the variable expression. Let's add a colon character and a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"format specifier"}]},{"type":"text","value":" after the variable name:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"/"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"The number is "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"number"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","format-spec"]},"children":[{"type":"text","value":".2f"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"The number "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"is"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.33"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The format specifier "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".2f"}]},{"type":"text","value":" states that we want to display 2 decimals. The letter "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"f"}]},{"type":"text","value":" at the end means that we want the variable to be displayed as a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"float"}]},{"type":"text","value":", i.e. a floating point number."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's another example, where we specify the amount of whitespace reserved for the variable in the printout. Both times the variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" is included in the resulting string, it has a space of 15 characters reserved. First the names are justified to the left, and then they are justified to the right:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"names "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Steve\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Jean\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Katherine\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" name "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" names"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\""}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","format-spec"]},"children":[{"type":"text","value":"15"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" centre "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","format-spec"]},"children":[{"type":"text","value":">15"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"Steve           centre           Steve\nJean            centre            Jean\nKatherine       centre       Katherine\nPaul            centre            Paul"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The uses of f-strings are not restricted to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print"}]},{"type":"text","value":" commands. They can be assigned to variables and combined with other strings:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"name "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Larry\""}]},{"type":"text","value":"\nage "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"48"}]},{"type":"text","value":"\ncity "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Palo Alto\""}]},{"type":"text","value":"\ngreeting "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\"Hi "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":", you are "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"age"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" years of age\""}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"greeting "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string-interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"f\", and you live in "}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"city"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hi Larry, you are 48 years of age, and you live in Palo Alto"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can think of an f-string as a sort of function, which creates a normal string based on the \"arguments\" within the curly brackets."}]},{"type":"element","tagName":"programming-exercise","properties":{"name":"Integers to strings","tmcname":"part04-32_integers_to_strings"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a function named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"formatted"}]},{"type":"text","value":", which takes a list of floating point numbers as its argument. The function returns a new list, which contains each element of the original list in string format, rounded to two decimal points. The order of the items in the list should remain unchanged."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Hint: use f-strings to format the floating point numbers into suitable strings."}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example of expected beahviour:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"my_list "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1.234"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.3333"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.11111"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3.446"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\nnew_list "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" formatted"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"my_list"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"new_list"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"['1.23', '0.33', '0.11', '3.45']"}]}]}]},{"type":"comment","value":"-\nA quiz to review the contents of this section:\n\n<quiz id=\"90d650f3-fde1-5132-ade9-73f3b4bf6189\"></quiz>\n"}]},"html":"<div><text-box variant='learningObjectives' name=\"Learning objectives\"><p>After this section</p><ul>\n<li>You will know how to use arguments to format the result of the <code class=\"language-text\">print</code> command</li>\n<li>You will be able to use f-strings to format printouts</li>\n</ul></text-box><p>So far we have learnt three methods for formulating the argument given to the <code class=\"language-text\">print</code> command.</p><p>The first is the <code class=\"language-text\">+</code> operator for strings. It allows simple concatenation of string segments:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">\"Mark\"</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">37</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" your age is \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" years\"</span> <span class=\"token punctuation\">)</span></code></pre></div><p>This method will not work if any of the segments are not strings. In the example above, the variable <code class=\"language-text\">age</code> has been converted into a string with the <code class=\"language-text\">str</code> function, since it is an integer and cannot be concatenated as is.</p><p>The second method is considering each segment of the argument as a separate argument, and splitting them up with commas:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"your age is\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">\"years\"</span> <span class=\"token punctuation\">)</span></code></pre></div><p>This code produces the exact same result as the previous version. The <code class=\"language-text\">print</code> command normally adds a space character between each argument.The advantage here is that the segments can be of different types, so there is no need to convert anything into a string.</p><p>If you want to remove the automatically added spaces, you can add a special named argument <code class=\"language-text\">sep</code>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"your age is\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">\"years\"</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>This prints out</p><sample-output><p>HiMarkyour age is37years</p></sample-output><p>The argument <code class=\"language-text\">sep=\"\"</code> is a <em>keyword argument</em>, and its name is short for <em>separator</em>. It specifies that the other arguments should now be separated by an empty string. You can set the separator to any string you like. For example, if you wanted each argument on a separate line, you could set the separator to <code class=\"language-text\">\"\\n\"</code>, which is the newline character:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"your age is\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">\"years\"</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Hi\nMark\nyour age is\n37\nyears</p></sample-output><p>By default, the print command always ends in a newline character, but you can change this as well. The keyword argument <code class=\"language-text\">end</code> specifies what is put at the end of a line. Setting <code class=\"language-text\">end</code> to an empty string means that there is no newline character at the end of the printout:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi \"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"there!\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Hi there!</p></sample-output><h2 id=\"f-strings\" style=\"position:relative;\">f-strings<a href=\"#f-strings\" aria-label=\"f strings permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>The third method to prepare strings is f-strings. The previous example with the name and the age would look like this formulated with f-strings:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">\"Erkki\"</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">39</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Hi </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> your age is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span></span><span class=\"token string\"> years\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><p>Thus far we have only used very simple f-strings, but they can be very versatile in formatting string type content. One very common use case is setting the number of decimals that are printed out with a floating point number. By default the number is quite high:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"The number is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>The number is 0.333333333333333</p></sample-output><p>The specific format we want the number to be displayed in can be set within the curly brackets of the variable expression. Let's add a colon character and a <em>format specifier</em> after the variable name:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"The number is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">The number <span class=\"token keyword\">is</span> <span class=\"token number\">0.33</span></code></pre></div><p>The format specifier <code class=\"language-text\">.2f</code> states that we want to display 2 decimals. The letter <em>f</em> at the end means that we want the variable to be displayed as a <code class=\"language-text\">float</code>, i.e. a floating point number.</p><p>Here's another example, where we specify the amount of whitespace reserved for the variable in the printout. Both times the variable <code class=\"language-text\">name</code> is included in the resulting string, it has a space of 15 characters reserved. First the names are justified to the left, and then they are justified to the right:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">names <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span> <span class=\"token string\">\"Steve\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jean\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Katherine\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Paul\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> names<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span><span class=\"token format-spec\">15</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> centre </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span><span class=\"token format-spec\">>15</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Steve           centre           Steve\nJean            centre            Jean\nKatherine       centre       Katherine\nPaul            centre            Paul</code></pre></div><p>The uses of f-strings are not restricted to <code class=\"language-text\">print</code> commands. They can be assigned to variables and combined with other strings:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">\"Larry\"</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">48</span>\ncity <span class=\"token operator\">=</span> <span class=\"token string\">\"Palo Alto\"</span>\ngreeting <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hi </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, you are </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span></span><span class=\"token string\"> years of age\"</span></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>greeting <span class=\"token operator\">+</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\", and you live in </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Hi Larry, you are 48 years of age, and you live in Palo Alto</p></sample-output><p>You can think of an f-string as a sort of function, which creates a normal string based on the \"arguments\" within the curly brackets.</p><programming-exercise name='Integers to strings' tmcname='part04-32_integers_to_strings'><p>Please write a function named <code class=\"language-text\">formatted</code>, which takes a list of floating point numbers as its argument. The function returns a new list, which contains each element of the original list in string format, rounded to two decimal points. The order of the items in the list should remain unchanged.</p><p><em>Hint: use f-strings to format the floating point numbers into suitable strings.</em></p><p>An example of expected beahviour:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.234</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3333</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.11111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.446</span><span class=\"token punctuation\">]</span>\nnew_list <span class=\"token operator\">=</span> formatted<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new_list<span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>['1.23', '0.33', '0.11', '3.45']</p></sample-output></programming-exercise><!---\nA quiz to review the contents of this section:\n\n<quiz id=\"90d650f3-fde1-5132-ade9-73f3b4bf6189\"></quiz>\n--></div>","frontmatter":{"path":"/part-3/5-print-statement-formatting","title":"Print statement formatting"},"fileAbsolutePath":"/home/runner/work/merijnads.github.io/merijnads.github.io/data/part-3/5-print-statement-formatting.md"},"allPages":{"edges":[{"node":{"id":"bd96e594-c070-59ea-9e19-18c7022c25f3","frontmatter":{"path":"/all-exercises","title":"All exercises"}}},{"node":{"id":"542a5fea-b437-5e29-b027-7fd2b270af2a","frontmatter":{"path":"/error_messages","title":"Veelvoorkomende foutmeldingen"}}},{"node":{"id":"70775c3b-7193-579a-ab2d-33bdc4cbbcd6","frontmatter":{"path":"/exam","title":"Exam 4.6."}}},{"node":{"id":"9c1cf45b-eab8-5ab2-b416-8c4128180ade","frontmatter":{"path":"/exam-adv","title":"Advanced Course in Programming exam 10.06."}}},{"node":{"id":"fe459f54-aab2-5936-90e9-8009ae3426ca","frontmatter":{"path":"/exam-intro","title":"Introduction to Programming extra exam 01.07."}}},{"node":{"id":"d98da5f8-e3b5-5042-80e7-ed3986dbf31c","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"ed7a9788-f932-5705-832a-c167ebc5c22b","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"e6098b8b-549a-56a7-81d2-44a5316d27ec","frontmatter":{"path":"/grading-and-exams","title":"Grading and exams"}}},{"node":{"id":"ab3e9e44-7b83-56ed-88fb-b05d3bb18963","frontmatter":{"path":"/","title":"Over deze cursus"}}},{"node":{"id":"4e174df1-85b2-5cb4-9f86-a76ef0307ee2","frontmatter":{"path":"/support-and-assistance","title":"Support and assistance"}}},{"node":{"id":"ffbff1dd-cb76-5ebd-9b81-66d1f46abf03","frontmatter":{"path":"/glossary","title":"Glossary"}}},{"node":{"id":"4108befb-266b-5325-99c3-4a3b9ff52737","frontmatter":{"path":"/part-1/1-getting-started","title":"Hallo Python"}}},{"node":{"id":"b2bbed91-2ec5-57cf-8946-e16c1a7af87f","frontmatter":{"path":"/part-1/5-vscode","title":"The Visual Studio Code editor"}}},{"node":{"id":"a6d839ae-6c94-528f-bde1-21b5ce3b3b16","frontmatter":{"path":"/part-1/2-information-from-the-user","title":"Informatie van de gebruiker"}}},{"node":{"id":"f5ea1b8c-3012-5511-8ab3-c582b41eeab7","frontmatter":{"path":"/part-1/3-more-about-variables","title":"Meer over variabelen"}}},{"node":{"id":"90c54dc9-dbad-5538-8a0c-310f04f8de28","frontmatter":{"path":"/part-1/4-arithmetic-operations","title":"Rekenkundige bewerkingen"}}},{"node":{"id":"f40df3d4-c72b-51e0-b846-bf71cab39001","frontmatter":{"path":"/part-1","title":"1. Week 1"}}},{"node":{"id":"1a4f00e0-bc91-5005-92b7-8047beff0cf6","frontmatter":{"path":"/part-10/1-class-hierarchies","title":"Class hierarchies"}}},{"node":{"id":"9e262663-d3c8-51e2-b9ad-bfe32679ac47","frontmatter":{"path":"/part-10/2-access-modifiers","title":"Access modifiers"}}},{"node":{"id":"435be738-6d5e-518c-b99a-556f2cd97a6e","frontmatter":{"path":"/part-10/3-oo-programming-techniques","title":"Object oriented programming techniques"}}},{"node":{"id":"3b595246-36f8-5e4d-b04f-dbd65d041c12","frontmatter":{"path":"/part-10/4-application-development","title":"Developing a larger application"}}},{"node":{"id":"67fd6d65-bd62-58bc-a43a-fbd900bed389","frontmatter":{"path":"/part-10","title":"Part 10"}}},{"node":{"id":"c0a6a927-ae74-5ec2-aac2-7a2df4696301","frontmatter":{"path":"/part-11/1-list-comprehensions","title":"List comprehensions"}}},{"node":{"id":"a79a363d-fd9c-5bc8-873e-7a49c711f21e","frontmatter":{"path":"/part-11/2-more-comprehensions","title":"More comprehensions"}}},{"node":{"id":"3f2883b3-9931-5fdb-b594-944d9e68975f","frontmatter":{"path":"/part-11/3-recursion","title":"Recursion"}}},{"node":{"id":"be022e02-4508-5d49-9053-844fc0088040","frontmatter":{"path":"/part-11/4-more-recursion-examples","title":"More recursion examples"}}},{"node":{"id":"29ec505d-8750-582f-a56a-82d917bc2511","frontmatter":{"path":"/part-11","title":"Part 11"}}},{"node":{"id":"73c43903-cbcd-5172-8dd4-d47cfc950c81","frontmatter":{"path":"/part-12/1-functions-as-arguments","title":"Functions as arguments"}}},{"node":{"id":"2d794549-9e72-54ed-9e64-b81bd91ad530","frontmatter":{"path":"/part-12/2-generators","title":"Generators"}}},{"node":{"id":"a7a5c3ab-6db1-51b7-a309-0860ddfb38ba","frontmatter":{"path":"/part-12/3-functional-programming","title":"Functional programming"}}},{"node":{"id":"e53c7ba4-5894-53fa-b460-ab14b8e9c8dc","frontmatter":{"path":"/part-12/4-regular-expressions","title":"Regular expressions"}}},{"node":{"id":"343fcb07-61a9-5aec-931c-befbe2d55666","frontmatter":{"path":"/part-12","title":"Part 12"}}},{"node":{"id":"cafe050c-1bf6-58c9-a543-66cc139b46b1","frontmatter":{"path":"/part-13/1-pygame","title":"Pygame"}}},{"node":{"id":"1643ed3c-740f-5668-9c69-2b6ea2e5a4fa","frontmatter":{"path":"/part-13/2-animation","title":"Animation"}}},{"node":{"id":"356dc7ac-9740-5bf9-98bd-d6c5dc672bc3","frontmatter":{"path":"/part-13/3-events","title":"Events"}}},{"node":{"id":"c9ca5e31-6c7f-51c6-80ef-dee4c4008c8b","frontmatter":{"path":"/part-13/4-more-pygame-techniques","title":"More pygame techniques"}}},{"node":{"id":"a0820cf9-444b-5541-bad1-1e2275081e0a","frontmatter":{"path":"/part-13","title":"Part 13"}}},{"node":{"id":"131225f8-a2ae-5121-9641-0b923fe6353c","frontmatter":{"path":"/part-14/1-game-project","title":"Game project"}}},{"node":{"id":"d4aac916-f01f-5739-8384-2d76a19e7587","frontmatter":{"path":"/part-14/2-robot-and-boxes","title":"Robot and boxes"}}},{"node":{"id":"db107e88-da46-5e9f-bb04-3b3983ae43b5","frontmatter":{"path":"/part-14/3-finishing-the-game","title":"Finishing the game"}}},{"node":{"id":"f6919dea-8ad3-5bd6-af74-e6f871db9c0f","frontmatter":{"path":"/part-14/4-your-own-game","title":"Your own game"}}},{"node":{"id":"e4d15f09-a4da-5df9-913a-b398db6bcf30","frontmatter":{"path":"/part-14","title":"Part 14"}}},{"node":{"id":"488a5857-7c58-5723-a63b-58d1b92e8ac8","frontmatter":{"path":"/part-2/1-conditional-statements","title":"Keuzestructuren (if)"}}},{"node":{"id":"ccd33c11-91ae-5a4a-83bb-0408dcc384a6","frontmatter":{"path":"/part-2/2-programming-terminology","title":"De taal van de programmeur"}}},{"node":{"id":"4c3bd1b6-9b79-5f5b-ad55-4c56d9f45ec0","frontmatter":{"path":"/part-2/3-else-elif","title":"Meer keuzestructuren (else-elif)"}}},{"node":{"id":"6514e261-342c-5568-bd87-c0b68f492337","frontmatter":{"path":"/part-2/4-combining-conditions","title":"And, or en not"}}},{"node":{"id":"ec27f6bb-33a0-50d4-82a9-12dc04ed033f","frontmatter":{"path":"/part-2","title":"2. Week 2"}}},{"node":{"id":"7a31914b-c66a-530f-ad58-75f0370906dc","frontmatter":{"path":"/part-3/1-vscode","title":"Visual Studio Code advanced"}}},{"node":{"id":"d29b1413-b0e6-5af6-978a-7c2ad87f82fb","frontmatter":{"path":"/part-3/3-lists","title":"Lijsten"}}},{"node":{"id":"2de72182-6e98-59bf-9a67-de8ba68c83ee","frontmatter":{"path":"/part-3/4-definite-iteration","title":"For loops"}}},{"node":{"id":"2853b381-6a6f-51e8-b057-58aac7846bec","frontmatter":{"path":"/part-3/5-print-statement-formatting","title":"Print statement formatting"}}},{"node":{"id":"a784262a-d7cf-5bf9-9f4d-5600b1d59b13","frontmatter":{"path":"/part-3/6-strings-and-lists","title":"More strings and lists"}}},{"node":{"id":"317b8ded-ac1e-5946-995b-81fb919676b3","frontmatter":{"path":"/part-3","title":"3. Week 3"}}},{"node":{"id":"f1c9fb5a-95a1-5f93-9fc4-cb6d48008ab3","frontmatter":{"path":"/part-4/1-simple-loops","title":"Simple loops"}}},{"node":{"id":"23b59d39-4414-5fc1-85ec-8ff380bfd93f","frontmatter":{"path":"/part-4/2-loops-with-conditions","title":"Loops with conditions"}}},{"node":{"id":"81c55fee-4656-5eb2-add2-feb66f93514c","frontmatter":{"path":"/part-4/3-working-with-strings","title":"Working with strings"}}},{"node":{"id":"6b823dbf-f8db-52d2-ae4a-1cdde272cf39","frontmatter":{"path":"/part-4/4-more-loops","title":"More loops"}}},{"node":{"id":"63a02414-4482-5f91-8d0c-fb10f15803fb","frontmatter":{"path":"/part-4","title":"4. Week 4"}}},{"node":{"id":"2c2dee90-15f3-58b7-98a2-a7811a9906e6","frontmatter":{"path":"/part-5/1-more-lists","title":"More lists"}}},{"node":{"id":"a5ed0143-5e9e-5854-ba22-aee0ecdda667","frontmatter":{"path":"/part-5/2-more-functions","title":"More functions"}}},{"node":{"id":"e7f509a1-cdd9-55c0-a9f4-4f2014b985e8","frontmatter":{"path":"/part-5/2-references","title":"References"}}},{"node":{"id":"84180e4f-7e76-5513-a335-96902e01ff3c","frontmatter":{"path":"/part-5/3-dictionary","title":"Dictionary"}}},{"node":{"id":"f7a2bca0-7686-51e8-9056-0327f40aaafa","frontmatter":{"path":"/part-5/4-defining-functions","title":"Defining functions"}}},{"node":{"id":"58d37b46-149b-5b88-914f-0e913837ea18","frontmatter":{"path":"/part-5/4-tuple","title":"Tuple"}}},{"node":{"id":"826f2d55-ad90-5f1a-9062-f329e0cb235d","frontmatter":{"path":"/part-5","title":"5. Week 5"}}},{"node":{"id":"1660eb93-2dd2-59ac-ac54-cb0375fd5153","frontmatter":{"path":"/part-6/1-reading-files","title":"Reading files"}}},{"node":{"id":"95151bae-4df2-5677-9464-a28d9f958e8c","frontmatter":{"path":"/part-6/2-writing-files","title":"Writing files"}}},{"node":{"id":"281c8610-f6f9-5978-a391-deaeec73df06","frontmatter":{"path":"/part-6/3-errors","title":"Handling errors"}}},{"node":{"id":"8cdc6677-9727-595d-8210-6dfe684b8a99","frontmatter":{"path":"/part-6/4-scope-of-variables","title":"Local and global variables"}}},{"node":{"id":"5f1dde96-abff-5bb1-aef9-761e89df45af","frontmatter":{"path":"/part-6","title":"Part 6"}}},{"node":{"id":"b6c6f277-5082-57cc-b05f-6827dea79104","frontmatter":{"path":"/part-7/1-modules","title":"Modules"}}},{"node":{"id":"703a5566-92f5-5750-9933-06f5d526c568","frontmatter":{"path":"/part-7/2-randomness","title":"Randomness"}}},{"node":{"id":"2e993d5b-60db-5625-b41d-73f185e83b94","frontmatter":{"path":"/part-7/3-times-and-dates","title":"Times and dates"}}},{"node":{"id":"f148a510-fe7e-5770-8be2-15d7e0544eb1","frontmatter":{"path":"/part-7/4-data-processing","title":"Data processing"}}},{"node":{"id":"31d99928-7914-561a-8fef-a4746fead511","frontmatter":{"path":"/part-7/5-creating-modules","title":"Creating your own modules"}}},{"node":{"id":"b500b8b6-cc51-5c17-8976-43957956d836","frontmatter":{"path":"/part-7/6-more-features","title":"More Python features"}}},{"node":{"id":"8b36887e-aab5-5355-b454-1c6f1cce45da","frontmatter":{"path":"/part-7","title":"Part 7"}}},{"node":{"id":"60e45817-f9f3-5e52-a7f5-00f6ae483a39","frontmatter":{"path":"/part-8/1-objects-and-methods","title":"Objects and methods"}}},{"node":{"id":"96b14699-9ed5-5eb5-ad53-13e4528780c6","frontmatter":{"path":"/part-8/2-classes-and-objects","title":"Classes and objects"}}},{"node":{"id":"ce66f54b-c3b1-588f-ad6c-68e4b2a3b3b8","frontmatter":{"path":"/part-8/3-defining-classes","title":"Defining classes"}}},{"node":{"id":"ac6153c0-3cde-52f3-b882-1bb58958d31a","frontmatter":{"path":"/part-8/4-defining-methods","title":"Defining methods"}}},{"node":{"id":"030dbd95-c130-551b-9ed0-6fbff364e697","frontmatter":{"path":"/part-8/5-more-examples-of-classes","title":"More examples of classes"}}},{"node":{"id":"79ed878f-a757-5943-b6a4-815ebb707eef","frontmatter":{"path":"/part-8","title":"Part 8"}}},{"node":{"id":"6df028d4-dab1-5a04-b241-9c210a89987a","frontmatter":{"path":"/part-9/1-objects-and-references","title":"Objects and references"}}},{"node":{"id":"778a6368-8fa0-5ccb-a225-c0fac924f078","frontmatter":{"path":"/part-9/2-objects-as-attributes","title":"Objects as attributes"}}},{"node":{"id":"65cc89ce-18a0-520b-b091-f1de2c7da4b8","frontmatter":{"path":"/part-9/3-encapsulation","title":"Encapsulation"}}},{"node":{"id":"60089ab7-942d-5e9d-ad4d-9a6a6baa28f3","frontmatter":{"path":"/part-9/4-scope-of-methods","title":"Scope of methods"}}},{"node":{"id":"9f6fb70d-6c72-545a-b4d9-f3f755a71ca3","frontmatter":{"path":"/part-9/5-class-attributes","title":"Class attributes"}}},{"node":{"id":"5f0bb7c0-c7be-5a7c-9bd9-e6560f1e9408","frontmatter":{"path":"/part-9/6-more-examples-with-classes","title":"More examples with classes"}}},{"node":{"id":"a119e2fc-3f3b-5285-9dbb-2fad43a229bc","frontmatter":{"path":"/part-9","title":"Part 9"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["1357757885","994120085"]}